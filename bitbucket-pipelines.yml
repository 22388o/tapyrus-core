options:
  size: 2x
pipelines:
  default:
    - step:
        script:
          # global env
          - MAKEJOBS=-j3
          - RUN_TESTS=false
          - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
          - DOCKER_NAME_TAG=ubuntu:18.04
          - LC_ALL=C.UTF-8
          - BOOST_TEST_RANDOM=1$BITBUCKET_BUILD_NUMBER
          - CCACHE_SIZE=100M
          - CCACHE_TEMPDIR=/tmp/.ccache-temp
          - CCACHE_COMPRESS=1
          - CCACHE_DIR=$BITBUCKET_CLONE_DIR/.ccache
          - BASE_OUTDIR=$BITBUCKET_CLONE_DIR/out
          - SDK_URL=https://bitcoincore.org/depends-sources/sdks
          - WINEDEBUG=fixme-all
          - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
          # x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)
          - HOST=x86_64-unknown-linux-gnu
          - PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev"
          - DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1"
          - RUN_TESTS=true
          - RUN_BENCH=true
          - GOAL="install"
          - BITCOIN_CONFIG="--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CXXFLAGS=\"-g0 -O2\""
          # Before Install
          - echo "Before Install"
          - RETRY() { for i in {1..3};do $*&&break;sleep 1;done }
          - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
          - echo "Install"
          - RETRY docker pull $DOCKER_NAME_TAG
          - env | grep -E '^(CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL)' | tee /tmp/env
          - if [[ $HOST = *-mingw32 ]]; then DOCKER_ADMIN="--cap-add SYS_ADMIN"; fi
          - DOCKER_ID=$(docker run $DOCKER_ADMIN -idt -v="$BITBUCKET_CLONE_DIR:$BITBUCKET_CLONE_DIR" -v="$CCACHE_DIR:$CCACHE_DIR" -w ${BITBUCKET_CLONE_DIR} --env-file /tmp/env $DOCKER_NAME_TAG)
          - DOCKER_EXEC () { docker exec $DOCKER_ID bash -c "cd $PWD && $*"; }
          - if [ -n "$DPKG_ADD_ARCH" ]; then DOCKER_EXEC dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
          - RETRY DOCKER_EXEC apt-get update
          - RETRY DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES
          # Before Script
          - echo "before script"
          - echo \> \$HOME/.bitcoin  # Make sure default datadir does not exist and is never read by creating a dummy file
          - mkdir -p depends/SDKs depends/sdk-sources
          - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
          - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
          - if [[ $HOST = *-mingw32 ]]; then DOCKER_EXEC update-alternatives --set $HOST-g++ \$\(which $HOST-g++-posix\); fi
          - if [ -z "$NO_DEPENDS" ]; then DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi
          # Script
          - echo "script"
          - export COMMIT_LOG=`git log --format=fuller -1`
          - OUTDIR=$BASE_OUTDIR/$BITBUCKET_PR_ID/$HOST
          - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=${BITBUCKET_CLONE_DIR}/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
          - if [ -z "$NO_DEPENDS" ]; then DOCKER_EXEC ccache --max-size=$CCACHE_SIZE; fi
          - test -n "$CONFIG_SHELL" && DOCKER_EXEC "$CONFIG_SHELL" -c "./autogen.sh" || DOCKER_EXEC ./autogen.sh
          - mkdir build && cd build
          - DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
          - DOCKER_EXEC make distdir VERSION=$HOST
          - cd bitcoin-$HOST
          - DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
          - DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && DOCKER_EXEC make $GOAL V=1 ; false )
          - if [ "$RUN_TESTS" = "true" ]; then DOCKER_EXEC LD_LIBRARY_PATH=${BITBUCKET_CLONE_DIR}/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1; fi
          - if [ "$RUN_BENCH" = "true" ]; then DOCKER_EXEC LD_LIBRARY_PATH=${BITBUCKET_CLONE_DIR}/depends/$HOST/lib $OUTDIR/bin/bench_bitcoin -scaling=0.001 ; fi
          - if [ "$TRAVIS_EVENT_TYPE" = "cron" ]; then extended="--extended --exclude feature_pruning,feature_dbcrash"; fi
          - if [ "$RUN_TESTS" = "true" ]; then DOCKER_EXEC test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet --failfast ${extended}; fi
        after_script:
          - echo $BITBUCKET_PR_DESTINATION_BRANCH
          - echo $COMMIT_LOG
        services:
          - docker
  definitions:
    services:
      docker:
        memory: 7128