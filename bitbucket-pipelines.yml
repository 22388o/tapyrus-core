image: ubuntu:18.04

definitions:
  caches:
    depends-built: "depends/built"
    depends-sdk: "depends/sdk-sources"
    ccache: $HOME/.ccache

pipelines:
  default:
    - parallel:
      - step:
          name: ARM
          caches:
            - depends-built
            - depends-sdk
            - ccache
          script:
            - source ./default-env.sh
            - >-
              HOST=arm-linux-gnueabihf
              PACKAGES="g++-arm-linux-gnueabihf"
              DEP_OPTS="NO_QT=1"
              GOAL="install"
              BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
              bash -xe ./build-test.sh
      - step:
          name: WIN32
          caches:
            - depends-built
            - depends-sdk
            - ccache
          script:
            - source ./default-env.sh
            - >-
              HOST=i686-w64-mingw32
              DPKG_ADD_ARCH="i386"
              DEP_OPTS="NO_QT=1"
              PACKAGES="python3 nsis g++-mingw-w64-i686 wine-binfmt wine32"
              RUN_TESTS=true
              GOAL="install"
              BITCOIN_CONFIG="--enable-reduce-exports"
              bash -xe ./build-test.sh
      - step:
          name: WIN64
          caches:
            - depends-built
            - depends-sdk
            - ccache
          script:
            - source ./default-env.sh
            - >-
              HOST=x86_64-w64-mingw32
              DEP_OPTS="NO_QT=1"
              PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64"
              RUN_TESTS=true
              GOAL="install"
              BITCOIN_CONFIG="--enable-reduce-exports"
              bash -xe ./build-test.sh
      - step:
          name: "[PENDING]32-bit + dash"
          caches:
            - depends-built
            - depends-sdk
            - ccache
          script:
            - echo "PENDING. Runnning time is over 2 hours limit."
#            - source ./default-env.sh
#            - >-
#              HOST=i686-pc-linux-gnu
#              PACKAGES="g++-multilib python3-zmq"
#              DEP_OPTS="NO_QT=1"
#              RUN_TESTS=true
#              GOAL="install"
#              BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++"
#              CONFIG_SHELL="/bin/dash"
#              bash -xe ./build-test.sh
      - step:
          name: "[PENDING]x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)"
          caches:
            - depends-built
            - depends-sdk
            - ccache
          script:
            - echo "PENDING. GUI unit tests are failing."
#            - source ./default-env.sh
#            - >-
#              HOST=x86_64-unknown-linux-gnu
#              PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev"
#              DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1"
#              RUN_TESTS=true
#              RUN_BENCH=true
#              GOAL="install"
#              BITCOIN_CONFIG="--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug"
#              CXXFLAGS="-g0 -O2"
#              bash -xe ./build-test.sh
      - step:
          name: "[PENDING]x86_64 Linux (Qt5 & system libs)"
          caches:
            - depends-built
            - depends-sdk
            - ccache
          script:
            - echo "PENDING. GUI unit tests are failing."
#            - source ./default-env.sh
#            - >-
#              HOST=x86_64-unknown-linux-gnu
#              PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev"
#              NO_DEPENDS=1
#              RUN_TESTS=true
#              GOAL="install"
#              BITCOIN_CONFIG="--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER"
#              bash -xe ./build-test.sh
      - step:
          name: "[PENDING]x86_64 Linux, No wallet"
          caches:
            - depends-built
            - depends-sdk
            - ccache
          script:
            - echo "PENDING. GUI unit tests are failing."
#            - source ./default-env.sh
#            - >-
#              HOST=x86_64-unknown-linux-gnu
#              PACKAGES="python3"
#              DEP_OPTS="NO_WALLET=1"
#              RUN_TESTS=true
#              GOAL="install"
#              BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
#              bash -xe ./build-test.sh
      - step:
          name: x86_64 Linux, No GUI
          caches:
            - depends-built
            - depends-sdk
            - ccache
          script:
          - source ./default-env.sh
          - >-
            HOST=x86_64-unknown-linux-gnu
            PACKAGES="python3-zmq libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev"
            NO_DEPENDS=1
            DEP_OPTS="NO_QT=1"
            RUN_TESTS=true
            GOAL="install"
            BITCOIN_CONFIG="--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=no CPPFLAGS=-DDEBUG_LOCKORDER"
            bash -xe ./build-test.sh
      - step:
          name: Cross-Mac
          caches:
            - depends-built
            - depends-sdk
            - ccache
          script:
            - source ./default-env.sh
            - >-
              HOST=x86_64-apple-darwin14
              PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git"
              OSX_SDK=10.11
              GOAL="all deploy"
              BITCOIN_CONFIG="--enable-gui --enable-reduce-exports --enable-werror"
              bash -xe ./build-test.sh
